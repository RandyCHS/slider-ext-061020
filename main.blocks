<xml xmlns="https://developers.google.com/blockly/xml"><comment data="0" x="0" y="0" h="120" w="480">A slider with track and thumb NOTES: 1. these not working on properties: //% width.min=30 width.max = 160 //% height.min=2 height.max = 10 2. increment property not implemeted 3. may want to add numberic data</comment><block type="pxt-on-start" x="10" y="10"><statement name="HANDLER"><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum Orientation {" line1="    //% block=&quot;horizontal&quot;" line2="    Horizontal = 0," line3="    //% block=&quot;vertical&quot;" line4="    Vertical = 1," line5="}" numlines="6"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace slider {" line1="    //% blockId=sliderCreate block=&quot;slider with value %value minimum %minimum maximum %maximum || width %width height %height orientation %orientation&quot;" line2="    //% value.defl=50" line3="    //% min.defl=0" line4="    //% max.defl=100" line5="    //% width.defl=100" line6="    //% height.defl=6" line7="    //% expandableArgumentMode=toggle" line8="    //% inlineInputMode=inline" line9="    //% blockSetVariable=mySlider" line10="    //% weight=100" line11="    //% group=&quot;Create&quot;" line12="    export function create(value: number = 50," line13="        min: number = 0, max: number = 100, width: number = 100, height: number = 6, orientaton: Orientation = Orientation.Horizontal): Slider {" line14="        return new Slider(value, min, max,  width, height, orientaton);" line15="    }" line16="}" numlines="17"></mutation><comment id="undefined" pinned="false" h="80" w="160">% weight=100 color=#008080 % groups='["Create", "Actions", "Properties"]'</comment><data>0</data><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Slider {" line1="    private track: Sprite;" line2="    private track_img: Image;" line3="    private thumb: Sprite;" line4="    private thumb_img: Image" line5="    private _value: number;" line6="    private _min: number;" line7="    private _max: number;" line8="    private _orientation:Orientation;" line9="    private _width: number;" line10="    private _thumb_width:number;" line11="    private _thumb_height:number;" line12="    private _height: number;" line13="    private _left: number;" line14="    private _top: number;" line15="    private _track_color:number;" line16="    private _thumb_color:number;" line17="    private _selected_color: number;    " line18="    private _selected:boolean;" line19="    private _data:string;" line20="    private _thumb_text: string;" line21="" line22="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line23="    //% blockCombine block=&quot;value&quot;" line24="    get value(): number {" line25="        return this._value;" line26="    }" line27="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line28="    //% blockCombine block=&quot;value&quot;" line29="    set value(value: number) {" line30="        this._value = value" line31="        this._thumb_text = &quot;&quot;;" line32="        this.calc_value();" line33="    }" line34="    private calc_value(){" line35="        this._value = Math.min(Math.max(this._value, this._min), this._max);" line36="        if (this._orientation == Orientation.Horizontal)" line37="        {" line38="            this.thumb.left = this._left - Math.floor(this._thumb_width / 2) + Math.round(this._width *(this._value - this._min) / (this._max - this._min));" line39="        } else {" line40="            this.thumb.top = 120 - this._top - Math.floor(this._thumb_height / 2) - Math.round(this._height *(this._value - this._min) / (this._max - this._min));" line41="        }" line42="        this.thumb.say(this._value.toString());" line43="    }" line44="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line45="    //% blockCombine block=&quot;min&quot;" line46="    get min(): number {" line47="        return this._min;" line48="    }" line49="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line50="    //% blockCombine block=&quot;min&quot;" line51="    set min(value: number) {" line52="        this._min = value;" line53="        this.calc_value();" line54="    }" line55="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line56="    //% blockCombine block=&quot;max&quot;" line57="    get max(): number {" line58="        return this._max;" line59="    }" line60="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line61="    //% blockCombine block=&quot;max&quot;" line62="    set max(value: number) {" line63="        this._max = value;" line64="        this.calc_value();" line65="    }" line66="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line67="    //% blockCombine block=&quot;width&quot;" line68="    get width(): number {" line69="        return this._width;" line70="    }" line71="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line72="    //% blockCombine block=&quot;height&quot;" line73="    get height(): number {" line74="        return this._height;" line75="    }" line76="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line77="    //% blockCombine block=&quot;left&quot;" line78="    get left(): number {" line79="        return this._left;" line80="    }" line81="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line82="    //% blockCombine block=&quot;left&quot;" line83="    set left(value: number) {" line84="        this._left = value;" line85="        this.update_slider();" line86="    }" line87="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line88="    //% blockCombine block=&quot;top&quot;" line89="    get top(): number {" line90="        return this._top;" line91="    }" line92="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line93="    //% blockCombine block=&quot;top&quot;" line94="    set top(value: number) {" line95="        this._top = value;" line96="        this.update_slider();" line97="    }" line98="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line99="    //% blockCombine block=&quot;selected border color&quot;" line100="    get selected_color(): number {" line101="        return this._selected_color;" line102="    }" line103="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line104="    //% blockCombine block=&quot;selected border color&quot;" line105="    set selected_color(value: number) {" line106="        this._selected_color = value;" line107="        this.update_slider();" line108="    }" line109="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line110="    //% blockCombine block=&quot;selected&quot;" line111="    get selected(): boolean {" line112="        return this._selected;" line113="    }" line114="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line115="    //% blockCombine block=&quot;selected&quot;" line116="    set selected(value: boolean) {" line117="        this._selected = value;" line118="        this.update_slider();" line119="    }" line120="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line121="    //% blockCombine block=&quot;data&quot;" line122="    get data(): string {" line123="        return this._data;" line124="    }" line125="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line126="    //% blockCombine block=&quot;data&quot;" line127="    set data(value: string) {" line128="        this._data = value;" line129="        this.update_slider();" line130="    }" line131="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line132="    //% blockCombine block=&quot;thumb text&quot;" line133="    get thumb_text(): string {" line134="        return this._thumb_text;" line135="    }" line136="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line137="    //% blockCombine block=&quot;thumb text&quot;" line138="    set thumb_text(value: string) {" line139="        this._thumb_text = value;" line140="        this.update_slider();" line141="    }" line142="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line143="    //% blockCombine block=&quot;track color&quot;" line144="    get track_color(): number {" line145="        return this._track_color;" line146="    }" line147="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line148="    //% blockCombine block=&quot;track color&quot;" line149="    set track_color(color: number) {" line150="        this._track_color = color;" line151="        this.update_slider();" line152="    }" line153="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line154="    //% blockCombine block=&quot;thumb color&quot;" line155="    get thumb_color(): number {" line156="        return this._thumb_color;" line157="    }" line158="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line159="    //% blockCombine block=&quot;thumb color&quot;" line160="    set thumb_color(color: number) {" line161="        this._thumb_color = color;" line162="        this.update_slider();" line163="    }" line164="    //% group=&quot;Properties&quot; blockSetVariable=&quot;mySlider&quot;" line165="    //% blockCombine block=&quot;thumb sprite&quot;" line166="    get thumb_sprite(): Sprite {" line167="        return this.thumb;" line168="    }" line169="    constructor(value: number, min: number, max: number, width: number, height: number, orientation: Orientation) {" line170="        this._value = value;" line171="        this._min = min;" line172="        this._max = max;" line173="        this._orientation = orientation" line174="        this._width = width;" line175="        this._height = height;" line176="        this._track_color = 6;" line177="        this._thumb_color = 2;" line178="        this._selected_color = 5;" line179="        this.track_img = image.create(this._width, this._height);" line180="        this.track_img.fill(this._track_color);" line181="        this.track = sprites.create(this.track_img);" line182="        if (this._orientation == Orientation.Horizontal){" line183="           this._left = (160 - this._width) / 2;" line184="            this._top = 120 - this._height - 2;" line185="            this._thumb_width = 1;" line186="            this._thumb_height = this._height;" line187="        } else {       " line188="            this._left = 3" line189="            this._top = (120 - this._height) / 2;" line190="            this._thumb_width = this._width;" line191="            this._thumb_height = 1;" line192="        }" line193="        this.thumb_img = image.create(this._thumb_width, this._thumb_height);" line194="        this.thumb_img.fill(this._thumb_color);" line195="        this.thumb = sprites.create(this.thumb_img);" line196="        this._selected = false;" line197="        this.update_slider();" line198="    }" line199="    " line200="    private update_slider() {" line201="        this.track_img.fill(this.track_color);" line202="        this.track.top = this._top;" line203="        this.track.left = this._left;" line204="        this.thumb_img.fill(this._thumb_color);" line205="        if(this._orientation == Orientation.Horizontal){" line206="            this.thumb.top = this._top;" line207="        } else{" line208="            this.thumb.left = this._left;" line209="        }" line210="        " line211="        if (this._selected){" line212="            helpers.imageDrawRect(this.track_img, 0, 0, this._width, this._height, this._selected_color)" line213="        } else {" line214="            helpers.imageDrawRect(this.track_img, 0, 0, this._width, this._height, this._track_color)" line215="        }" line216="        this.calc_value();" line217="        if (!this._thumb_text.isEmpty()){" line218="            this.thumb.say(this._thumb_text);" line219="        }" line220="    }   " line221="}" numlines="222"></mutation><comment id="undefined" pinned="false" h="80" w="160">% blockNamespace=slider color="#008080" blockGap=8</comment></block></next></block></next></block></statement></block></xml>